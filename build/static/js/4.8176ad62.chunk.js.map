{"version":3,"sources":["helpers/table/index.js","containers/modules/table/EnchanedTableHead.jsx","containers/modules/projectsTable/ProjectsTable.jsx","containers/pages/Projects.jsx"],"names":["descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","useStyles","makeStyles","theme","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","width","EnhancedTableHead","onRequestSort","headCells","classes","headCell","sortable","label","id","sortDirection","active","direction","onClick","property","event","className","disablePadding","actions__container","alignItems","display","gridTemplateColumns","gridTemplateRows","justifyContent","avatar","avatar__container","editIcon","gridColumnStart","paginationSelect","paper","borderRadius","boxShadow","marginBottom","spacing","table","minWidth","teamCell","trashIcon","EnhancedTable","rows","isLoading","isShowOperationsIcons","history","useHistory","location","useLocation","useState","setOrder","setOrderBy","rowsPerPage","setRowsPerPage","page","setPage","getDate","str","date","Date","month","toLocaleDateString","getFullYear","emptyRows","Math","min","length","Paper","LinearProgress","Table","rowCount","TableBody","tableBody","slice","row","labelId","TableRow","hover","role","tabIndex","scope","projectName","startDate","finishDate","status","team","person","root","style","left","size","firstName","toUpperCase","lastName","userId","push","ENTITY","PROJECTS","projectId","OPERATIONS","TEAM","background","payload","moreIcon","marginLeft","startIcon","START","finishIcon","FINISH","EDIT","DELETE","colSpan","TablePagination","rowsPerPageOptions","component","count","onPageChange","newPage","onRowsPerPageChange","parseInt","target","value","selectIcon","buttonRoot","textTransform","Projects","dispatch","useDispatch","projects","useSelector","state","list","user","profile","userDTO","useEffect","fetchProjects","Grid","container","Typography","variant","color","CREATE","ProjectsTable","filter","project","u"],"mappings":"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","file":"static/js/4.8176ad62.chunk.js","sourcesContent":["const descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\n\nconst stableSort = (array, comparator) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n};\n\nexport { getComparator, stableSort };\n","import { TableCell, TableHead } from 'components';\n\nimport { TableRow, TableSortLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst EnhancedTableHead = ({ order, orderBy, onRequestSort, headCells }) => {\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  const classes = useStyles();\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => {\n          if (headCell.sortable === false) {\n            return <TableCell key={headCell.id}>{headCell.label}</TableCell>;\n          }\n          return (\n            <TableCell\n              key={headCell.id}\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={createSortHandler(headCell.id)}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <span className={classes.visuallyHidden}>\n                    {order === 'desc'\n                      ? 'sorted descending'\n                      : 'sorted ascending'}\n                  </span>\n                ) : null}\n              </TableSortLabel>\n            </TableCell>\n          );\n        })}\n        <TableCell />\n      </TableRow>\n    </TableHead>\n  );\n};\n\nexport default EnhancedTableHead;\n","import { useState } from 'react';\n\nimport { TableCell, TableContainer, TableTeamAvatar } from 'components';\nimport {\n  EditIcon,\n  FinishIcon,\n  MoreIcon,\n  StartIcon,\n  TrashIcon,\n} from 'components/shared/icons';\nimport { getComparator, stableSort } from 'helpers/table';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { OPERATIONS, ENTITY } from 'router/ModalSwitcher';\n\nimport {\n  LinearProgress,\n  Paper,\n  Table,\n  TableBody,\n  TablePagination,\n  TableRow,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport EnhancedTableHead from '../table/EnchanedTableHead';\n\nconst headCells = [\n  { id: 'projectName', disablePadding: true, label: 'Project Name' },\n  { id: 'startDate', disablePadding: false, label: 'Start Date' },\n  { id: 'endDate', disablePadding: false, label: 'End Date' },\n  { id: 'status', disablePadding: false, label: 'Status' },\n  { id: 'team', disablePadding: false, label: 'Team', sortable: false },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  actions__container: {\n    alignItems: 'center',\n    border: 'none',\n    display: 'grid',\n    gridTemplateColumns: '58px  58px 58px',\n    gridTemplateRows: '52px',\n    justifyContent: 'end',\n  },\n  avatar: {\n    position: 'absolute',\n  },\n  avatar__container: {\n    display: 'flex',\n    position: 'relative',\n  },\n  editIcon: {\n    gridColumnStart: '2',\n  },\n  paginationSelect: {\n    top: 0,\n  },\n  paper: {\n    borderRadius: 0,\n    boxShadow: 'none',\n    marginBottom: theme.spacing(2),\n    width: '100%',\n  },\n  table: {\n    minWidth: 750,\n  },\n  teamCell: {\n    alignItems: 'center',\n    border: 'none',\n    position: 'relative',\n  },\n  trashIcon: {\n    gridColumnStart: '3',\n  },\n}));\n\nconst EnhancedTable = ({ rows, isLoading, isShowOperationsIcons }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('projectName');\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const getDate = (str) => {\n    if (!str) return null;\n    const date = new Date(str);\n    const month = date.toLocaleDateString('en-US', { month: 'long' });\n    return date.getDate() + ' ' + month + ' ' + date.getFullYear();\n  };\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <Paper className={classes.paper}>\n      <TableContainer>\n        {isLoading && <LinearProgress />}\n        <Table\n          className={classes.table}\n          aria-labelledby='tableTitle'\n          aria-label='enhanced table'\n        >\n          <EnhancedTableHead\n            order={order}\n            orderBy={orderBy}\n            onRequestSort={handleRequestSort}\n            rowCount={rows.length}\n            headCells={headCells}\n          />\n          <TableBody className={classes.tableBody}>\n            {stableSort(rows, getComparator(order, orderBy))\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, index) => {\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hover\n                    role='checkbox'\n                    tabIndex={-1}\n                    key={`${row.id}`}\n                  >\n                    <TableCell id={labelId} scope='row'>\n                      {row.projectName}\n                    </TableCell>\n                    <TableCell>{getDate(row.startDate) || '-'}</TableCell>\n                    <TableCell>{getDate(row.finishDate) || '-'}</TableCell>\n                    <TableCell>{row.status}</TableCell>\n                    <TableCell className={classes.teamCell}>\n                      <div className={classes.avatar__container}>\n                        {row.team.slice(0, 4).map((person, index) => (\n                          <TableTeamAvatar\n                            key={person.userId}\n                            classes={{ root: classes.avatar }}\n                            style={{ left: 16 * index + 'px' }}\n                            size={30}\n                          >\n                            {person.firstName[0].toUpperCase() +\n                              person.lastName[0].toUpperCase()}\n                          </TableTeamAvatar>\n                        ))}\n                        <MoreIcon\n                          onClick={() => {\n                            history.push(\n                              `/${ENTITY.PROJECTS}/${row.projectId}/${OPERATIONS.TEAM}`,\n                              {\n                                background: location,\n                                payload: row.team,\n                              }\n                            );\n                          }}\n                          className={classes.moreIcon}\n                          style={{\n                            marginLeft:\n                              row.team.length &&\n                              row.team.length * 16 + 32 + 'px',\n                          }}\n                        />\n                      </div>\n                    </TableCell>\n                    <TableCell\n                      size='small'\n                      className={classes.actions__container}\n                    >\n                      {!row.startDate &&\n                        !row.finishDate &&\n                        isShowOperationsIcons && (\n                          <StartIcon\n                            className={classes.startIcon}\n                            onClick={() => {\n                              history.push(\n                                `/${ENTITY.PROJECTS}/${row.projectId}/${OPERATIONS.START}`,\n                                {\n                                  background: location,\n                                  payload: row,\n                                }\n                              );\n                            }}\n                          />\n                        )}\n                      {row.startDate &&\n                        !row.finishDate &&\n                        isShowOperationsIcons && (\n                          <FinishIcon\n                            className={classes.finishIcon}\n                            onClick={() => {\n                              history.push(\n                                `/${ENTITY.PROJECTS}/${row.projectId}/${OPERATIONS.FINISH}`,\n                                {\n                                  background: location,\n                                  payload: row,\n                                }\n                              );\n                            }}\n                          />\n                        )}\n                      {isShowOperationsIcons && (\n                        <EditIcon\n                          className={classes.editIcon}\n                          onClick={() => {\n                            history.push(\n                              `/${ENTITY.PROJECTS}/${row.projectId}/${OPERATIONS.EDIT}`,\n                              {\n                                background: location,\n                                payload: row,\n                              }\n                            );\n                          }}\n                        />\n                      )}\n                      {isShowOperationsIcons && (\n                        <TrashIcon\n                          className={classes.trashIcon}\n                          onClick={() => {\n                            history.push(\n                              `/${ENTITY.PROJECTS}/${row.projectId}/${OPERATIONS.DELETE}`,\n                              {\n                                background: location,\n                                payload: row,\n                              }\n                            );\n                          }}\n                        />\n                      )}\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 64 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component='div'\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        classes={{ selectIcon: classes.paginationSelect }}\n      />\n    </Paper>\n  );\n};\n\nexport default EnhancedTable;\n","import { useEffect } from 'react';\n\nimport { Button } from 'components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { fetchProjects } from 'redux/modules/projects';\nimport { OPERATIONS, ENTITY } from 'router/ModalSwitcher';\n\nimport { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ProjectsTable from '../modules/projectsTable/ProjectsTable';\nimport { users } from 'redux/modules';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '0 0 40px 0',\n  },\n  buttonRoot: {\n    minWidth: '220px',\n    textTransform: 'none',\n  },\n}));\n\nconst Projects = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const projects = useSelector((state) => state.projects.list);\n  const isLoading = useSelector((state) => state.projects.isLoading);\n  const user = useSelector((state) => state.profile.userDTO);\n\n  useEffect(() => {\n    dispatch(fetchProjects());\n  }, [dispatch]);\n\n  const getUserProjects = () => {\n    return projects.filter((project) => {\n      const teamOfCurrentUser = project.team.filter(\n        (u) => u.userId === user.id\n      );\n      if (teamOfCurrentUser.length > 0) return project;\n    });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        direction='row'\n        justifyContent='space-between'\n        className={classes.root}\n      >\n        <Typography variant='h5' component='h1'>\n          Projects\n        </Typography>\n        {(user.role === 'admin' || user.role === 'manager') && (\n          <Button\n            color='primary'\n            className={classes.buttonRoot}\n            onClick={() => {\n              history.push(`/${ENTITY.PROJECTS}/${OPERATIONS.CREATE}`, {\n                background: location,\n              });\n            }}\n          >\n            Create Project\n          </Button>\n        )}\n      </Grid>\n      {(user.role === 'admin' || user.role === 'manager') && (\n        <ProjectsTable\n          rows={projects}\n          isLoading={isLoading}\n          isShowOperationsIcons={true}\n        />\n      )}\n      {(user.role === 'developer' || user.role === 'qa') && (\n        <ProjectsTable\n          rows={getUserProjects()}\n          isLoading={isLoading}\n          isShowOperationsIcons={false}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Projects;\n"],"sourceRoot":""}