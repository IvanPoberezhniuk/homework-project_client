{"version":3,"sources":["containers/pages/PageNotFound.jsx"],"names":["useStyles","makeStyles","theme","container","width","display","justifyContent","alignItems","height","text","color","palette","primary","main","fontSize","letterSpacing","margin","handle","background","marginTop","animation","opacity","PageNotFound","useState","textToType","setTextToType","classes","useEffect","split","forEach","letter","index","setTimeout","prevState","className"],"mappings":"4JAIMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTC,MAAO,OACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,QAEVC,KAAM,CACJC,MAAOR,EAAMS,QAAQC,QAAQC,KAC7BC,SAAU,OACVC,cAAe,QACfC,OAAQ,GAEVC,OAAQ,CACNC,WAAY,UACZd,MAAO,OACPI,OAAQ,OACRW,UAAW,MACXC,UAAU,gCACVJ,OAAO,cAET,sBAAuB,CACrB,MAAO,CACLK,QAAS,QA2BAC,UAtBM,WACnB,IAAMb,EAAI,uBACV,EAAoCc,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAU1B,IAWhB,OAVA2B,qBAAU,WACalB,EAAKmB,MAAM,IAEnBC,SAAQ,SAACC,EAAQC,GAC5BC,YAAW,WACTP,GAAc,SAACQ,GAAD,OAAeA,EAAYH,OACxC,GAAKC,QAET,CAACtB,IAGF,sBAAKyB,UAAWR,EAAQvB,UAAxB,UACE,mBAAG+B,UAAWR,EAAQjB,KAAtB,SAA6Be,IAC7B,sBAAMU,UAAWR,EAAQT","file":"static/js/9.66975c10.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '70vh',\n  },\n  text: {\n    color: theme.palette.primary.main,\n    fontSize: '28px',\n    letterSpacing: '0.2px',\n    margin: 0,\n  },\n  handle: {\n    background: '#ffe500',\n    width: '14px',\n    height: '30px',\n    marginTop: '1px',\n    animation: `1s infinite reverse $blinking`,\n    margin: `0 0 10px 0`,\n  },\n  '@keyframes blinking': {\n    '50%': {\n      opacity: 0,\n    },\n  },\n}));\n\nconst PageNotFound = () => {\n  const text = `404, page not found.`;\n  const [textToType, setTextToType] = useState('');\n  const classes = useStyles();\n  useEffect(() => {\n    const splittedText = text.split('');\n\n    splittedText.forEach((letter, index) => {\n      setTimeout(() => {\n        setTextToType((prevState) => prevState + letter);\n      }, 85 * index);\n    });\n  }, [text]);\n\n  return (\n    <div className={classes.container}>\n      <p className={classes.text}>{textToType}</p>\n      <span className={classes.handle}></span>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n"],"sourceRoot":""}